version: '3'
services:
  redis:
    image: redis:5.0.7-alpine # Use stable version
    container_name: redis
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes # Start with data persistance
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:4.2.3 # Use stable version
    environment:
      MONGO_INITDB_DATABASE: proavalon
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  # Web interface to access the mongoDB server.
  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    restart: on-failure

  backend:
    container_name: backend
    depends_on:
      - mongo
    ports:
      - 3001:3001
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        SERVICE: backend
    environment:
      SERVICE: backend
      JWT_SECRET_KEY: my_secret
      DATABASE_URL: mongodb://root:password@mongo:27017/proavalon?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./packages/backend:/usr/src/app/packages/backend
      - /usr/src/app/packages/backend/node_modules

  frontend:
    container_name: frontend
    ports:
      - 3000:3000
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        SERVICE: frontend
    environment:
      SERVICE: frontend
      BACKEND_URL: http://localhost:3001
    volumes:
      - ./packages/frontend:/usr/src/app/packages/frontend
      - /usr/src/app/packages/frontend/node_modules
      - /usr/src/app/packages/frontend/.next
  # Uncomment to have a second set of servers
  backend2:
    container_name: backend2
    depends_on:
      - mongo
    ports:
      - 3003:3001
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        SERVICE: backend
    environment:
      SERVICE: backend
      JWT_SECRET_KEY: my_secret
      DATABASE_URL: mongodb://root:password@mongo:27017/proavalon?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./packages/backend:/usr/src/app/packages/backend
      - /usr/src/app/packages/backend/node_modules
  frontend2:
    container_name: frontend2
    ports:
      - 3002:3000
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        SERVICE: frontend
    environment:
      SERVICE: frontend
      BACKEND_URL: http://localhost:3003
    volumes:
      - ./packages/frontend:/usr/src/app/packages/frontend
      - /usr/src/app/packages/frontend/node_modules
      - /usr/src/app/packages/frontend/.next

volumes:
  mongo_data:
  redis_data: