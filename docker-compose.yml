version: '3'
services:
  redis:
    image: redis:5.0.7-alpine # Use stable version
    container_name: cache
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes # Start with data persistance
    volumes:
      - ./database_data/redis/:/data

  mongo:
    image: mongo:4.2.3 # Use stable version
    environment:
      MONGO_INITDB_DATABASE: proavalon
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - ./database_data/mongo/:/data/db

  # Web interface to access the mongoDB server.
  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    restart: on-failure

  backend:
    container_name: backend
    depends_on:
      - mongo
    ports:
      - ${BACKEND_PORT}:3001
    build:
      context: .
      dockerfile: Dockerfile.${ENV}
      args:
        SERVICE: backend
    environment:
      SERVICE: backend
    volumes:
      - ./packages/backend:/usr/src/app/packages/backend
      - /usr/src/app/packages/backend/node_modules

  frontend:
    container_name: frontend
    ports:
      - ${FRONTEND_PORT}:3000
    build:
      context: .
      dockerfile: Dockerfile.${ENV}
      args:
        SERVICE: frontend
    environment:
      SERVICE: frontend
    volumes:
      - ./packages/frontend:/usr/src/app/packages/frontend
      - /usr/src/app/packages/frontend/node_modules
      - /usr/src/app/packages/frontend/.next
